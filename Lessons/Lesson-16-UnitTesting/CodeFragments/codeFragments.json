{"codeFragments":[{"label":"case when example (consider order)","content":"                case Square s when s.Side == 0:\r\n                case Circle c when c.Radius == 0:\r\n                case Triangle t when t.Base == 0 || t.Height == 0:\r\n                case Rectangle r when r.Length == 0 || r.Height == 0:\r\n                    return 0;"},{"label":"case null example","content":"                case null:\r\n                    throw new ArgumentNullException(paramName: nameof(shape), message: \"Shape must not be null\");\r\n"},{"label":"case var example","content":"        static object CreateShape(string shapeDescription)\r\n        {\r\n            switch (shapeDescription)\r\n            {\r\n                case \"circle\":\r\n                    return new Circle(2);\r\n\r\n                case \"square\":\r\n                    return new Square(4);\r\n\r\n                case \"large-circle\":\r\n                    return new Circle(12);\r\n\r\n                case var o when (o?.Trim().Length ?? 0) == 0:\r\n                    // white space\r\n                    return null;\r\n                default:\r\n                    return \"invalid shape description\";\r\n            }\r\n        }"},{"label":"case expression example","content":"        static string Display(object o) // for point\r\n        {\r\n            return o switch\r\n            {\r\n                Point p when p.X == 0 && p.Y == 0 => \"origin\",\r\n                Point p                           => $\"({p.X}, {p.Y})\",\r\n                _                                 => \"unknown\"\r\n            };\r\n        }"},{"label":"case property pattern example","content":"        static string Display(object o) => o switch\r\n        {\r\n            Point { X: 0, Y: 0 }         p => \"origin\",\r\n            Point { X: var x, Y: var y } p => $\"({x}, {y})\",\r\n            {}                           => o.ToString(),\r\n            null                         => \"null\"\r\n            //_                              => \"unknown\"\r\n        };"},{"label":"is pattern example (9.0)","content":"\r\n        public static bool IsLetterOrSeparator(char c) =>\r\n            c is (>= 'a' and <= 'z') or (>= 'A' and <= 'Z') or '.' or ',';"}]}